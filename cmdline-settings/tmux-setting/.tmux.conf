
#0 clear all binding
#unbind-key -a

# bell setting
#set -g visual-bell off      # on: not pass bell through to the terminal


# 窗口编号从1开始(对我有用, 符合键盘数字分布)
set -g base-index 1


# 2.1 版本之前设置支持鼠标的方法
#setw -g mouse-resize-pane on
#setw -g mouse-select-pane on
#setw -g mouse-select-window on
#setw -g mode-mouse   on

# 2.1 版本之后
# 支持鼠标操作: 拖动pane大小, 点击选择pane, window
# 但是开启tmux 支持鼠标后, 终端不能双击选中单词了.可以通过按下shift, 再双击选择.(略有不便是值得的.)
set-option -g mouse on
set-option -g allow-rename off                            # ssh, sudo等命令执行时不会再改变tab名字了


# 3 键绑定 =======================================
# tmux 的每个操作, 应该都对应一个内部命令: 比如source-file, new, attach, detach...
# prefix + }/{  切换pane位置命令是 swap-apne
bind-key r source-file ~/.tmux.conf \; display "reloaded" # m1: (prefix + r to source-file config),
                                                          # m2: 也可以执行tmux source-file ~/.tmux.conf,
                                                          # m3: 或者按下prefix, 输入: source-file ~/.tmux.conf

#bind-key 0 swap-window -t 10                             # (prefix + v to 水平分割 -- 和vim一致)
bind-key 0 select-window -t 10                            # (prefix + v to 水平分割 -- 和vim一致)
bind-key v split-window -h                                # (prefix + v to 水平分割 -- 和vim一致)
bind-key s split-window -v                                # (prefix + s 垂直分割, 和 vim一样)

bind-key \; command-prompt                                # 按":"进入tmux命令行模式.  ";" 可能有特殊涵义, 所以需转义.




# 交换窗口.
# 交换窗口位置命令: swap-window
# usage: swap-windows [ -s  num ]   < -t num >
# :google how do reorder  window in tmux
# -r repeat
bind-key    C-i  swap-window -t  1     # i is between "h" and "l"
bind-key -r C-h  swap-window -t -1     # vi-like config
bind-key -r C-h  swap-window -t -     # vi-like config
bind-key -r C-l  swap-window -t +1     # vi-like config

# bind-key -n C-S-Left swap-window -t -1
# bind-key -n C-S-Right swap-window -t +1
# 或者直接 prefix + : , 然后运行命令:swap-window  -t <num>      # 切换当前窗口.

# ============================================
#bind h select-pane -L
#bind j select-pane -D
#bind k select-pane -U

bind l select-pane -R       # <prefix>l 占用了 prefix + l 跳回上一个切换tab/window(last-window)

bind w last-window          # 默认是　bind l last-window, 但是l是vi-like方向键， 用来在多个pane切换.
                            # 所以选用了w, w默认bind 为 列出窗口号, 没什么卵用.( 不知道是什么命令 )
                            # 本想选用f键， 但f默认bind 为find-window. 在多于10个窗口时有用.


# 4. vim-navigator ============================================
# 在 vim-tmux-navigator学到的
# 在pane 上下左右 之间切换.
# bind is alias for bind-key

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# -n指定绑定不需要<prefix>, 比如以下绑定的不需要<prefix>
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
#bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

# 结束程序还要使用<C-\>
#bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
#bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# bind-key -n C attach -c "#{pane_current_path}"    # 加"-n" 会导致C在终端不可用, 因为-n意思是绑定不需要前导键执行
bind-key C attach -c "#{pane_current_path}"    # 前导键 + "大写C", 修改当前tmux session的default目录为当前目录

# set -g renumber-windows on                   # 当有window关闭时自动重新分配索引
set -g renumber-windows off                    # 当有window关闭时自动重新分配索引

set -g status-justify left                   # tab left对齐
# set -g status-justify right                # tab right对齐
# set -g status-justify centre               # tab居中对齐



# ------------------- include/source  ---------------------
# 1 前导键: prefix设置为 <C+space>
# unbind C-q

source-file ~/.tmux_local.conf
